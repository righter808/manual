=================================================
1,根据屏幕大小而适配屏幕
答:给节点 添加一个组件widget 即可,然后记得打上勾,左右上下
=================================================
2,下面这段代码什么意思?
@property(cc.SpriteFrame)
face1: cc.SpriteFrame = null;
答:给脚本添加sprite属性
=================================================
3,如何访问父对象?
this
=================================================
4,把节点删除,怎么弄?
destroy 和 removeFromParent
=================================================
5,监听事件通过哪2个函数来注册?有什么区别?
this.node.on(),this.node.once(),once 监听在监听函数响应后就会关闭监听事件。
=================================================
6,this.node.on(),this.node.once()传入哪3个参数?
事件名,处理方法,this
=================================================
7,怎么关闭监听事件?有什么需要注意的?
this.node.off(),off 方法的参数必须和 on 方法的参数一一对应，才能完成关闭。
=================================================
8,除了通过场景编辑器创建节点外，我们也可以通过什么方法创建?
 new cc.Node('节点名')
=================================================
9,destroy 和 removeFromParent 的区别.
destory直接从内存中销毁,removeFromParent只是从父节点中移除,可能还保存在内存中
=================================================
10,想要获取节点上的组件用什么?
node.getComponent('组件名')
=================================================
11,如何查找到一个节点?
cc.find('节点名')
=================================================
12,1个A节点,1个B节点,如果A节点通过ascript组件 ,获取B节点的bscript组件,使用bscript里的goo方法,怎么处理?
答:1find节点,2,getComponent脚本组件,3,调用里面的方法
=================================================
13,假设我们在一个组件脚本中，通过什么访问当前脚本所在节点。
this.node
=================================================
14,节点默认是激活的，我们可以在代码中设置它的激活状态，方法是设置节点的什么属性
active
=================================================
15,当一个节点的active=false时，下列哪个是正确的.
A:它的所有组件都将被禁用。同时，它所有子节点，以及子节点上的组件也会跟着被禁用
B:它的所有组件都将被禁用。同时，它所有子节点，以及子节点上的组件不会被禁用
=================================================
16更改节点的父节点
this.node.parent = parentNode;
=================================================
17,查找子节点
this.node.getChildByName("子节点名");
=================================================
18,onLoad()什么时候执行
加载初始化时.执行里面的方法
=================================================
19,update(dt)什么时候执行
作为组件的成员方法，在组件的 enabled 属性为 true 时，其中的代码会每帧执行
=================================================
20,start()什么时候执行
会在该组件第一次 update 之前执行，通常用于需要在所有组件的 onLoad 初始化完毕后执行的逻辑
=================================================
21,碰撞组件的4步是什么?
1,编辑节点  2,添加碰撞组件和脚本 3,开启碰撞检测 4,编写碰撞后执行的函数
=================================================
22,脚本中,this和this.node的区别是?
this指的是这个脚本对象,this.node指的是这个节点
=================================================
23,访问脚本里的方法change,该怎么访问调用,请选择
A:this.change    B:this.node.change
=================================================
24,设置1个计时器,计时打印3次,,执行move111和move222方法,请看代码.
  move111(){
			this.node.x+=50;
		    console.log(  this.node.x)}
			
  move222(){
 		var pos=this.node.x;
		pos+=50
		console.log(pos)}
		
请问,他们分别打印什么?为什么会产生不同?

答:move111打印50,50,50,move222打印50,100,150.
   因为this.node.x是node的变量,执行一次方法会再次改变值,变量不会销毁.
   move222,里的pos属于函数内局部变量,函数执行完后,会销毁,所以会一直是这个值
=============================
25,有3个脚本,a.js  b.js c.js,应该怎么控制他们的执行顺序?
设置一个控制脚本,把abc导入到控制脚本,然后在onload中安顺序init初始化
=============================
26,如果制作有大量敌人或子弹需要反复生成和被消灭的动作类游戏，我们要如何在游戏进行过程中随时创建和销毁节点呢？
对象池
